WHAT STILL NEEDS TO BE DONE:
Call--2 - Call is supposed to create a brand new stack frame for the subprogram, the value of the very first cell,
cell '-2', in the new stack frame is returnIp, the value of the second cell, cell '-1', should be returnBp. Then 
the instruction pointer should be changed to the label that was passed with call--2. The base pointer needs to then
be set to the subprogram's number of instructions +1, but how will we know how many instructions the subprogram has?
The stack pointer needs to be set to the base pointer +2, and bpOffset obviously needs to be set to bp+2, the heap 
pointer should be set to the end of the subprogram's memory, but how will we know what the end of the subprogram's 
memory is?

Return--5 - Stuff the value in cell mem[bpOffset + a] into rv. Change bp to mem[bp+1], change ip to mem[bp].
How will we know what to change the stack pointer and heap pointer to?

Symbol--30 - Someone gets to write a big switch statement with all the ASCII values here. . . . . . . .

Allocate global space--32 - A global variable is meant to be stored just outside of the program's memory, so if 
this gets called, should we resize the memory array, or should we have a sepearte array that's JUST for global
variables? The latter would be much easier, but I'm not sure it's what Jerry wants.

Copy to/from global--33/34 - How these work will change depending on how we implement global variables.

ip - Instruction Pointer: Points to the next instruction for VPL to execute, default = 0.

bp - Base Pointer: Points to the beginning of the program's memory, default = number of instructions (k).

bpOffset - Base Pointer Offset: If the programmer references cell 5, VPL should access the 5th cell in the
stack frame. The stack frame begins two cells after the base pointer. So cell 5 = mem[bp+2 + 5]. bpOffset 
is just bp+2. Remember that every time we update the base pointer, we need to update bpOffset as well.

sp - Stack Pointer: Points to the END of the stack frame, default = bp+2.

rv - Return Value: Holds the value a function returned, default = -1.

hp - Heap Pointer: Points to the BEGINNING of the Heap, default = end of memory (max).

gp - Global Pointer: Used for global variables, default = end of memory (max) +1.

Currently working on Project 1; "Implement VPL by starting from the given file VPL.java. . .".
------------------------------------- DUE Monday, September 10 -------------------------------------------
If you do anything make sure to add your name to the comment at the top of VPL.java
To launch from terminal, use "java VPL tests/exercise1b 50", you will be asked to input a number,
the program should output a '2' if the input is even and a '1' if the input is odd.
